## Fast.BI Deployment 
# Helm deployment values for Service.
# Helm Chart name: {{ chart_name }}
# Helm Chart repo: {{ chart_repo }}
# Helm Chart version {{ chart_version }}
fullnameOverride: "data-replication-db-psql"
image:
  registry: docker.io
  repository: bitnamilegacy/postgresql
  tag: 16.6.0
architecture: standalone
replication:
  synchronousCommit: "on"
  applicationName: "airbyte"
primary:
  name: ""
  replicaCount: 1
  resourcesPreset: "none"
{%- if postgresql_tls_update == "true" %}
  extendedConfiguration: |
    max_connections = 1000
    ssl = on
  pgHbaConfiguration: |
    # TYPE  DATABASE        USER            ADDRESS                 METHOD
    # Allow password authentication without SSL
    host    all             all             all                     scram-sha-256
    # Allow password authentication with SSL
    hostssl all             all             all                     scram-sha-256
    # Replication entries
    hostssl replication     repl_user       all                     scram-sha-256
    host    replication     repl_user       all                     scram-sha-256
{%- endif %}
readReplicas:
  replicaCount: 1
{%- if postgresql_tls_update == "true" %}
  extendedConfiguration: |
    max_connections = 1000
    ssl = on
  pgHbaConfiguration: |
    # TYPE  DATABASE        USER            ADDRESS                 METHOD
    # Allow password authentication without SSL
    host    all             all             all                     scram-sha-256
    # Allow password authentication with SSL
    hostssl all             all             all                     scram-sha-256
    # Replication entries
    hostssl replication     repl_user       all                     scram-sha-256
    host    replication     repl_user       all                     scram-sha-256
{%- endif %}
  resourcesPreset: "none"
  synchronousCommit: "remote_apply"
  numSynchronousReplicas: 1
  readinessProbe:
    enabled: false
  livenessProbe:
    enabled: false
auth:
  enablePostgresUser: true
  existingSecret: airbyte-postgresql
  secretKeys:
    adminPasswordKey: postgresPassword
    userPasswordKey: password
    replicationPasswordKey: replicationPassword
  replicationUsername: {{ replication_username }}
  username: {{ username }}
  database: {{ database }}
# Enable SSL with auto-generated certificates
tls:
{%- if postgresql_tls_update == "true" %}
  enabled: true
{%- else %}
  enabled: false
{%- endif %}
  autoGenerated: true
  certificatesSecret: ""
  certFilename: "tls.crt"
  certKeyFilename: "tls.key"
  certCAFilename: "ca.crt"
persistence:
  enabled: true
  accessMode: ReadWriteOnce
  size: 5Gi
podSecurityContext:
  fsGroup: 70
containerSecurityContext:
  allowPrivilegeEscalation: false 
  runAsNonRoot: true
  runAsUser: 70
  runAsGroup: 70
  readOnlyRootFilesystem: false
  capabilities:
    drop: ["ALL"]
  seccompProfile:
    type: RuntimeDefault
extraDeploy:
{%- if method == "external_infisical" %}
- apiVersion: secrets.infisical.com/v1alpha1
  kind: InfisicalSecret
  metadata:
      name: infisicalsecret-data-replication-database-secrets
  spec:
      resyncInterval: 15
      authentication:
          universalAuth:
              secretsScope:
                  projectSlug: "{{ project_slug }}"
                  envSlug: prod
                  secretsPath: "/data-replication/database-secrets/"
              credentialsRef:
                  secretName: universal-auth-credentials
                  secretNamespace: infisical-operator-system
      managedSecretReference:
          secretName: airbyte-postgresql
          secretNamespace: "{{ namespace }}"
{%- endif %}
{%- if method == "local_vault" %}
- apiVersion: external-secrets.io/v1
  kind: ExternalSecret
  metadata:
    name: hashicorp-data-replication-database-secrets
    namespace: "{{ namespace }}"
  spec: 
    refreshInterval: 15s
    secretStoreRef:
      name: vault-backend
      kind: ClusterSecretStore
    target:
      name: airbyte-postgresql
    dataFrom:
      - extract:
          key: "data-replication/database-secrets"
{% endif %}