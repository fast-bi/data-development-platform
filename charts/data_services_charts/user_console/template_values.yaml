## Fast.BI Deployment 
# Helm deployment values for Service.
# Helm Chart name: {{ chart_name }}
# Helm Chart repo: {{ chart_repo }}
# Helm Chart version {{ chart_version }}

nameOverride: "{{ data_platform_user_console_deployment_name }}"
namespace: "{{ namespace }}"
image:
  name: "{{ data_platform_user_console_app_name }}"
  tag: "{{ data_platform_user_console_app_version }}"

manifests:
# Secrets for User Console - Synchronized
{%- if method == "external_infisical" %}
{%- if local_postgresql != true %}
- apiVersion: secrets.infisical.com/v1alpha1
  kind: InfisicalSecret
  metadata:
      name: infisicalsecret-fastbi-user-console-database-secrets
  spec:
      resyncInterval: 15
      authentication:
          universalAuth:
              secretsScope:
                  projectSlug: "{{ project_slug }}"
                  envSlug: prod
                  secretsPath: "/user-console/database-secrets/"
              credentialsRef:
                  secretName: universal-auth-credentials
                  secretNamespace: infisical-operator-system
      managedSecretReference:
          secretName: fastbi-user-console-db-secrets
          secretNamespace: "{{ namespace }}"
{%- endif %}
- apiVersion: secrets.infisical.com/v1alpha1
  kind: InfisicalSecret
  metadata:
      name: infisicalsecret-fastbi-user-console-root-secrets
  spec:
      resyncInterval: 15
      authentication:
          universalAuth:
              secretsScope:
                  projectSlug: "{{ project_slug }}"
                  envSlug: prod
                  secretsPath: "/user-console/root-secrets/"
              credentialsRef:
                  secretName: universal-auth-credentials
                  secretNamespace: infisical-operator-system
      managedSecretReference:
          secretName: fastbi-user-console-root-secrets
          secretNamespace: "{{ namespace }}"
- apiVersion: secrets.infisical.com/v1alpha1
  kind: InfisicalSecret
  metadata:
      name: infisicalsecret-fastbi-user-console-smtp-secrets
  spec:
      resyncInterval: 15
      authentication:
          universalAuth:
              secretsScope:
                  projectSlug: "{{ project_slug }}"
                  envSlug: prod
                  secretsPath: "/user-console/smtp-secrets/"
              credentialsRef:
                  secretName: universal-auth-credentials
                  secretNamespace: infisical-operator-system
      managedSecretReference:
          secretName: fastbi-user-console-smtp-secrets
          secretNamespace: "{{ namespace }}"
- apiVersion: secrets.infisical.com/v1alpha1
  kind: InfisicalSecret
  metadata:
      name: infisicalsecret-fastbi-user-console-sso-clients-secrets
  spec:
      resyncInterval: 15
      authentication:
          universalAuth:
              secretsScope:
                  projectSlug: "{{ project_slug }}"
                  envSlug: prod
                  secretsPath: "/user-console/sso-clients-secrets/"
              credentialsRef:
                  secretName: universal-auth-credentials
                  secretNamespace: infisical-operator-system
      managedSecretReference:
          secretName: fastbi-user-console-sso-clients-secrets
          secretNamespace: "{{ namespace }}"
- apiVersion: secrets.infisical.com/v1alpha1
  kind: InfisicalSecret
  metadata:
      name: infisicalsecret-fastbi-user-console-git-secrets
  spec:
      resyncInterval: 15
      authentication:
          universalAuth:
              secretsScope:
                  projectSlug: "{{ project_slug }}"
                  envSlug: prod
                  secretsPath: "/data-platform-runner/ci-access-tokens/"
              credentialsRef:
                  secretName: universal-auth-credentials
                  secretNamespace: infisical-operator-system
      managedSecretReference:
          secretName: fastbi-user-console-git-secrets
          secretNamespace: "{{ namespace }}"
- apiVersion: secrets.infisical.com/v1alpha1
  kind: InfisicalSecret
  metadata:
      name: infisicalsecret-data-warehouse-bigquery-secrets
  spec:
      resyncInterval: 15
      authentication:
          universalAuth:
              secretsScope:
                  projectSlug: "{{ project_slug }}"
                  envSlug: prod
                  secretsPath: "/data-platform-runner/gcp-cloud-dwh-service-accounts/"
              credentialsRef:
                  secretName: universal-auth-credentials
                  secretNamespace: infisical-operator-system
      managedSecretReference:
          secretName: data-warehouse-bigquery-secrets
          secretNamespace: "{{ namespace }}"
- apiVersion: secrets.infisical.com/v1alpha1
  kind: InfisicalSecret
  metadata:
      name: infisicalsecret-data-warehouse-snowflake-secrets
  spec:
      resyncInterval: 15
      authentication:
          universalAuth:
              secretsScope:
                  projectSlug: "{{ project_slug }}"
                  envSlug: prod
                  secretsPath: "/data-platform-runner/snowflake-cloud-dwh-service-accounts/"
              credentialsRef:
                  secretName: universal-auth-credentials
                  secretNamespace: infisical-operator-system
      managedSecretReference:
          secretName: data-warehouse-snowflake-secrets
          secretNamespace: "{{ namespace }}"
- apiVersion: secrets.infisical.com/v1alpha1
  kind: InfisicalSecret
  metadata:
      name: infisicalsecret-data-warehouse-redshift-secrets
  spec:
      resyncInterval: 15
      authentication:
          universalAuth:
              secretsScope:
                  projectSlug: "{{ project_slug }}"
                  envSlug: prod
                  secretsPath: "/data-platform-runner/aws-cloud-dwh-service-accounts/"
              credentialsRef:
                  secretName: universal-auth-credentials
                  secretNamespace: infisical-operator-system
      managedSecretReference:
          secretName: data-warehouse-redshift-secrets
          secretNamespace: "{{ namespace }}"
- apiVersion: secrets.infisical.com/v1alpha1
  kind: InfisicalSecret
  metadata:
      name: infisicalsecret-data-warehouse-fabric-secrets
  spec:
      resyncInterval: 15
      authentication:
          universalAuth:
              secretsScope:
                  projectSlug: "{{ project_slug }}"
                  envSlug: prod
                  secretsPath: "/data-platform-runner/azure-cloud-dwh-service-accounts/"
              credentialsRef:
                  secretName: universal-auth-credentials
                  secretNamespace: infisical-operator-system
      managedSecretReference:
          secretName: data-warehouse-fabric-secrets
          secretNamespace: "{{ namespace }}"
{%- endif %}
{%- if method == "local_vault" %}
{%- if local_postgresql != true %}
- apiVersion: external-secrets.io/v1
  kind: ExternalSecret
  metadata:
    name: hashicorp-fastbi-user-console-postgresql-secrets
    namespace: "{{ namespace }}"
  spec: 
    refreshInterval: 24h
    secretStoreRef:
      name: vault-backend
      kind: ClusterSecretStore
    target:
      name: fastbi-user-console-db-secrets
    dataFrom:
      - extract:
          key: "user-console/database-secrets"
{%- endif %}
- apiVersion: external-secrets.io/v1
  kind: ExternalSecret
  metadata:
    name: hashicorp-fastbi-user-console-root-secrets
    namespace: "{{ namespace }}"
  spec: 
    refreshInterval: 24h
    secretStoreRef:
      name: vault-backend
      kind: ClusterSecretStore
    target:
      name: fastbi-user-console-root-secrets
    dataFrom:
      - extract:
          key: "user-console/root-secrets"
- apiVersion: external-secrets.io/v1
  kind: ExternalSecret
  metadata:
    name: hashicorp-fastbi-user-console-smtp-secrets
    namespace: "{{ namespace }}"
  spec: 
    refreshInterval: 24h
    secretStoreRef:
      name: vault-backend
      kind: ClusterSecretStore
    target:
      name: fastbi-user-console-smtp-secrets
    dataFrom:
      - extract:
          key: "user-console/smtp-secrets"
- apiVersion: external-secrets.io/v1
  kind: ExternalSecret
  metadata:
    name: hashicorp-fastbi-user-console-sso-clients-secrets
    namespace: "{{ namespace }}"
  spec: 
    refreshInterval: 24h
    secretStoreRef:
      name: vault-backend
      kind: ClusterSecretStore
    target:
      name: fastbi-user-console-sso-clients-secrets
    dataFrom:
      - extract:
          key: "user-console/sso-clients-secrets"
- apiVersion: external-secrets.io/v1
  kind: ExternalSecret
  metadata:
    name: hashicorp-fastbi-user-console-git-secrets
    namespace: "{{ namespace }}"
  spec:
    refreshInterval: 24h
    secretStoreRef:
      name: vault-backend
      kind: ClusterSecretStore
    target:
      name: fastbi-user-console-git-secrets
    dataFrom:
      - extract:
          key: "/data-platform-runner/ci-access-tokens/"
- apiVersion: external-secrets.io/v1
  kind: ExternalSecret
  metadata:
    name: hashicorp-data-warehouse-bigquery-secrets
    namespace: "{{ namespace }}"
  spec:
    refreshInterval: 24h
    secretStoreRef:
      name: vault-backend
      kind: ClusterSecretStore
    target:
      name: data-warehouse-bigquery-secrets
    dataFrom:
      - extract:
          key: "data-platform-runner/gcp-cloud-dwh-service-accounts/"
- apiVersion: external-secrets.io/v1
  kind: ExternalSecret
  metadata:
    name: hashicorp-data-warehouse-snowflake-secrets
    namespace: "{{ namespace }}"
  spec:
    refreshInterval: 24h
    secretStoreRef:
      name: vault-backend
      kind: ClusterSecretStore
    target:
      name: data-warehouse-snowflake-secrets
    dataFrom:
      - extract:
          key: "data-platform-runner/snowflake-cloud-dwh-service-accounts/"
- apiVersion: external-secrets.io/v1
  kind: ExternalSecret
  metadata:
    name: hashicorp-data-warehouse-redshift-secrets
    namespace: "{{ namespace }}"
  spec:
    refreshInterval: 24h
    secretStoreRef:
      name: vault-backend
      kind: ClusterSecretStore
    target:
      name: data-warehouse-redshift-secrets
    dataFrom:
      - extract:
          key: "data-platform-runner/aws-cloud-dwh-service-accounts/"
- apiVersion: external-secrets.io/v1
  kind: ExternalSecret
  metadata:
    name: hashicorp-data-warehouse-fabric-secrets
    namespace: "{{ namespace }}"
  spec:
    refreshInterval: 24h
    secretStoreRef:
      name: vault-backend
      kind: ClusterSecretStore
    target:
      name: data-warehouse-fabric-secrets
    dataFrom:
      - extract:
          key: "data-platform-runner/azure-cloud-dwh-service-accounts/"
{%- endif %}
# Secrets for User Console - Deployed
- apiVersion: v1
  kind: Secret
  metadata:
    name: fastbi-user-console-local-secrets
    labels:
      app: fastbi-user-console
  type: Opaque
  stringData:
    FLASK_DEBUG: "0"
    FLASK_ENV: "production"
    API_URL: "/api/static/openapi.yml"
    FASTBI_PLATFORM_DWH: "{{ data_platform_warehouse }}"
{%- if data_platform_warehouse == "bigquery" %}
    BI_PLATFORM_BQ_ID: "{{ bq_project_id }}"
    BI_PLATFORM_GCP_ID: "{{ gcp_project_id }}"
    GCP_SA_IMPERSONATE_EMAIL: "{{ gcp_sa_impersonate_email }}"
{%- endif %}
    AIRFLOW_VARIABLES_FILE_NAME: "dbt_airflow_variables.yml"
    AIRBYTE_LOCAL_K8S_SVC_URL: "{{ airbyte_local_k8s_svc_url }}"
    AIRBYTE_API_LINK: "{{ airbyte_api_link }}"
    DBT_INIT_API_LINK: "{{ main_endpoint }}"
    AIRBYTE_LINK: "{{ data_replication_endpoint }}"
    AIRFLOW_LINK: "{{ data_orchestration_endpoint }}"
    CUSTOMER_REPO_LINK: "{{ data_model_repo_url[:-4] if data_model_repo_url.endswith('.git') else data_model_repo_url }}"
    DATA_CATALOG_LINK: "{{ data_catalog_endpoint }}"
    DATA_QUALITY_LINK: "{{ data_quality_endpoint }}"
    DATAHUB_LINK: "{{ data_governance_endpoint }}"
    GITLAB_LINK: "{{ data_model_repo_url }}"
    IDE_LINK: "{{ ide_endpoint }}"
    BI_LINK: "{{ bi_endpoint }}"
    MAIN_LINK: "{{ main_endpoint }}"
    MONITORING_LINK: "{{ monitoring_endpoint }}"
    S3_LINK: "{{ s3_link }}"
    DATA_MODEL_REPO_URL: "{{ data_model_repo_url }}"
    SSO_CONSOLE_LINK: "{{ sso_console_link }}"
    WIKI_LINK: "{{ wiki_fastbi_endpoint }}"
    IDP_SSO_LINK: "{{ sso_idp_platform_admin_endpoint }}"
    IDP_SSO_USERS_LINK: "{{ sso_idp_platform_users_endpoint }}"
    CUSTOMER: "{{ customer }}"
    DOMAIN: "{{ domain }}"
    MINIO_BUCKET_NAME: "{{ dbt_project_archive_bucket }}"
    MINIO_ENDPOINT: "{{ bucket_s3_link }}"
    DATA_ORCHESTRATOR_BASE_URL: "{{ data_orchestration_internal_k8s_web_svc }}"
    DATA_ORCHESTRATOR_REPO_URL: "{{ data_orchestration_repo_url }}"
    DC_DQ_ENDPOINT_URL: "{{ data_dcdq_metacollect_internal_k8s_web_svc }}"
    CICD_WORKFLOW_LINK: "{{ data_workflows_endpoint}}"
- apiVersion: v1
  kind: Secret
  metadata:
    name: fastbi-user-console-sso-secrets
    labels:
      app: fastbi-user-console
  type: Opaque
  stringData:
    client_secrets.json: |
      {
          "web": {
              "issuer": "{{ sso_idp_platform_realm_endoint }}",
              "auth_uri": "{{ sso_idp_platform_realm_endoint }}/protocol/openid-connect/auth",
              "client_id": "{{ user_console_sso_idp_platform_client_id }}",
              "client_secret": "{{ user_console_sso_idp_platform_client_secret }}",
              "redirect_uris": [
                  "{{ main_endpoint }}/oidc/callback"
              ],
              "userinfo_uri": "{{ sso_idp_platform_realm_endoint }}/protocol/openid-connect/userinfo",
              "token_uri": "{{ sso_idp_platform_realm_endoint }}/protocol/openid-connect/token",
              "token_introspection_uri": "{{ sso_idp_platform_realm_endoint }}/protocol/openid-connect/token/introspect"
          }
      }
# Services for User Console
- apiVersion: v1
  kind: Service
  metadata:
    name: fastbi-user-console-svc
  spec:
    type: ClusterIP
    ports:
    - port: 80
      targetPort: 80
    selector:
      app: fastbi-user-console
# Ingress for User Console
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    name: fastbi-user-console
    annotations:
      external-dns.alpha.kubernetes.io/hostname: {{ ingress_host }}
      # cert-manager.io/cluster-issuer: lets-encrypt-issuer
      traefik.ingress.kubernetes.io/router.middlewares: traefik-ingress-redirect-https@kubernetescrd
    labels:
      app: fastbi-user-console
  spec:
    ingressClassName: traefik
    rules:
      - host: {{ ingress_host }}
        http:
          paths:
            - pathType: Prefix
              path: "/"
              backend:
                service:
                  name: fastbi-user-console-svc
                  port:
                    number: 80
    tls: [] # Using Fast.BI WildCard Certificate namespace traefik-ingress
      # - hosts:
      #     - {{ ingress_host }}
      #   secretName: bi-platform-web-cert-tls # < cert-manager will store the created certificate in this secret.
# Nginx Proxy ConfigMap for User Console
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: fastbi-user-console-nginx-proxy-cm
    labels:
      app: fastbi-user-console
  data:
    default.conf: |
        # this is required to proxy Grafana Live WebSocket connections.
        access_log severity=warn;
        
        map $http_upgrade $connection_upgrade {
          default upgrade;
          '' close;
        }

        upstream grafana {
          server localhost:3000;
        }

        upstream backend {
            server localhost:8080;
        }

        upstream api {
            server localhost:8888;
        }
        
        server {
            listen 80;

            # Adjust buffer sizes
            proxy_buffer_size   512k;
            proxy_buffers   4 1024k;
            proxy_busy_buffers_size   2048k;

            # Define the location for caching
            location / {

                access_log severity=info;

                # Add CORS headers to allow cross-site authentication
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header X-Frame-Options SAMEORIGIN always;
                add_header Set-Cookie "SameSite=None; Secure";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_pass http://backend;
            }

            location /grafana/ {
                access_log severity=warn;
                proxy_set_header Host $http_host;
                proxy_pass http://grafana;
            }

            # Proxy Grafana Live WebSocket connections.
            location /grafana/api/live/ {
                access_log severity=warn;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;
                proxy_set_header Host $http_host;
                proxy_pass http://grafana;
            }

            # Define the location for caching
            location /api/ {
                access_log severity=info;
                # Add CORS headers to allow cross-site authentication
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header X-Frame-Options SAMEORIGIN always;
                add_header Set-Cookie "SameSite=None; Secure";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_pass http://api;
            }

          # For YAML format
          location /openapi.json {
              access_log severity=info;
              add_header 'Access-Control-Allow-Origin' '*' always;
              add_header X-Frame-Options SAMEORIGIN always;
              add_header Set-Cookie "SameSite=None; Secure";
              add_header Content-Type "application/x-yaml" always;  # Add content type header
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_pass http://api/openapi.json;
          }
        }
# StatefulSet for User Console
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    name: fastbi-user-console
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: fastbi-user-console
    serviceName: "fastbi-user-console-svc"
    template:
      metadata:
        labels:
          app: fastbi-user-console
          fastbi: data-platform-user-console
      spec:
        terminationGracePeriodSeconds: 10
        initContainers:
{%- if cloud_provider == "self-managed" %}
          - name: merge-ca-certs
            image: busybox:latest
            command:
              - /bin/sh
              - -c
              - |
                cat /etc/ca/certs/ca.crt /etc/ssl/certs/ca-certificates.crt > /etc/fastbi/ssl/certs/ca.crt
            volumeMounts:
              - name: ca-certs
                mountPath: /etc/ca/certs
                readOnly: true
              - name: system-certs
                mountPath: /etc/ssl/certs
                readOnly: true
              - name: fastbi-certs
                mountPath: /etc/fastbi/ssl/certs
{%- endif %}
          - name: generate-jwt-token-cert
            image: finalgene/openssh:latest
            imagePullPolicy: IfNotPresent
            command: ["/bin/bash", "-c"]
            args:
              - |
                if [ ! -f /usr/src/app/instance/grafana.key ] || [ ! -f /usr/src/app/instance/grafana.key.pub ]; then
                    ssh-keygen -t rsa -b 4096 -m PEM -f /usr/src/app/instance/grafana.key -N ''
                    openssl rsa -in /usr/src/app/instance/grafana.key -pubout -outform PEM -out /usr/src/app/instance/grafana.key.pub
                else
                    echo "Files grafana.key and grafana.key.pub already exist. Skipping generation."
                fi
            volumeMounts:
              - name: fastbi-user-console-flask-data
                mountPath: /usr/src/app/instance/
        containers:
          - name: grafana
            image: "docker.io/{{ embeded_grafana_image_version }}"
            imagePullPolicy: IfNotPresent
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                  - ALL
              seccompProfile:
                type: RuntimeDefault
            readinessProbe:
              httpGet:
                path: /api/health
                port: 3000
              initialDelaySeconds: 30
              periodSeconds: 10
            startupProbe:
              httpGet:
                path: /api/health
                port: 3000
              failureThreshold: 30
              periodSeconds: 10
            volumeMounts:
              - name: config
                mountPath: "/etc/grafana/grafana.ini"
                subPath: grafana.ini
              - name: config
                mountPath: "/etc/grafana/provisioning/datasources/datasources.yaml"
                subPath: "datasources.yaml"
              - name: config
                mountPath: "/etc/grafana/provisioning/dashboards/dashboardproviders.yaml"
                subPath: "dashboardproviders.yaml"
              - name: storage
                mountPath: "/var/lib/grafana"
              - name: dashboards-bi-platform
                mountPath: "/var/lib/grafana/dashboards/bi-platform"
              - name: fastbi-user-console-flask-data
                mountPath: /usr/src/app/instance/
            ports:
              - name: grafana
                containerPort: 3000
                protocol: TCP
              - name: gossip-tcp
                containerPort: 9094
                protocol: TCP
              - name: gossip-udp
                containerPort: 9094
                protocol: UDP
            env:
              - name: POD_IP
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
              - name: GF_SECURITY_ADMIN_USER
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-root-secrets
                    key: MONITORING_BASIC_AUTH_USER
              - name: GF_SECURITY_ADMIN_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-root-secrets
                    key: MONITORING_BASIC_AUTH_PASS
              - name: GF_PATHS_DATA
                value: /var/lib/grafana/
              - name: GF_PATHS_LOGS
                value: /var/log/grafana
              - name: GF_PATHS_PLUGINS
                value: /var/lib/grafana/plugins
              - name: GF_PATHS_PROVISIONING
                value: /etc/grafana/provisioning
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
          - name: fastbi-user-console-api-site-flask
            image: "{{tsb_dbt_init_core_image }}:{{ tsb_dbt_init_core_image_version }}"
            imagePullPolicy: IfNotPresent
            # command: ["/bin/bash", "-c"]
            # args:
            #   - |
            #     sleep infinity
            ports:
              - name: tcp
                containerPort: 8888
                protocol: TCP
            readinessProbe:
              httpGet:
                path: /api/v3/health
                port: 8888
              initialDelaySeconds: 30
              periodSeconds: 10
            startupProbe:
              httpGet:
                path: /api/v3/health
                port: 8888
              failureThreshold: 30
              periodSeconds: 10
            resources:
              requests:
                memory: "512Mi"
                cpu: "300m"
            env:
              - name: DATA_WAREHOUSE_SECRET
                value: "1"
              - name: DBT_INIT_API_LINK
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: DBT_INIT_API_LINK
              - name: DEBUG
                value: "true"
              - name: FLASK_ENV
                value: production
              - name: BASIC_AUTH_USERNAME
                valueFrom:
                  secretKeyRef:
                    key: BASIC_AUTH_USERNAME
                    name: fastbi-user-console-root-secrets
              - name: BASIC_AUTH_PASSWORD
                valueFrom:
                  secretKeyRef:
                    key: BASIC_AUTH_PASSWORD
                    name: fastbi-user-console-root-secrets
              - name: API_URL
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: API_URL
              - name: API_KEY
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-root-secrets
                    key: API_KEY
              - name: DATA_MODEL_REPO_URL
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: DATA_MODEL_REPO_URL
              - name: GROUP_ACCESS_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-git-secrets
                    key: PRIVATE-TOKEN
              - name: AIRFLOW_VARIABLES_FILE_NAME
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: AIRFLOW_VARIABLES_FILE_NAME
              - name: AIRBYTE_LOCAL_K8S_SVC_URL
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: AIRBYTE_LOCAL_K8S_SVC_URL
              - name: CUSTOMER
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: CUSTOMER
                    optional: true
              - name: DOMAIN
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: DOMAIN
              - name: MINIO_BUCKET_NAME
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: MINIO_BUCKET_NAME
              - name: MINIO_ENDPOINT
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: MINIO_ENDPOINT
              - name: MINIO_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    key: MINIO_ACCESS_KEY
                    name: fastbi-user-console-root-secrets
              - name: MINIO_SECRET_KEY
                valueFrom:
                  secretKeyRef:
                    key: MINIO_SECRET_KEY
                    name: fastbi-user-console-root-secrets
              - name: DATA_ORCHESTRATOR_BASE_URL
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: DATA_ORCHESTRATOR_BASE_URL
              - name: DATA_ORCHESTRATOR_BASE_USER
                valueFrom:
                  secretKeyRef:
                    key: DATA_ORCHESTRATOR_BASE_USER
                    name: fastbi-user-console-root-secrets
              - name: DATA_ORCHESTRATOR_BASE_USER_PASSWORD
                valueFrom:
                  secretKeyRef:
                    key: DATA_ORCHESTRATOR_BASE_USER_PASSWORD
                    name: fastbi-user-console-root-secrets
              - name: DATA_ORCHESTRATOR_REPO_URL
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: DATA_ORCHESTRATOR_REPO_URL
              - name: DC_DQ_ENDPOINT_URL
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: DC_DQ_ENDPOINT_URL
              - name: DC_DQ_BEARER_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-root-secrets
                    key: DC_DQ_BEARER_TOKEN
              - name: GCP_SA_SECRET
                valueFrom:
                  secretKeyRef:
                    key: GCP_SA_SECRET
                    name: fastbi-user-console-root-secrets
                    optional: true
{%- if cloud_provider == "self-managed" %}
              - name: SSL_CERT_FILE
                value: /etc/fastbi/ssl/certs/ca.crt
              - name: REQUESTS_CA_BUNDLE  
                value: /etc/fastbi/ssl/certs/ca.crt
{%- endif %}
            volumeMounts:
              - name: data-warehouse-bigquery-secrets
                mountPath: /fastbi/secrets/bigquery
              - name: data-warehouse-fabric-secrets
                mountPath: /fastbi/secrets/fabric
              - name: data-warehouse-redshift-secrets
                mountPath: /fastbi/secrets/redshift
              - name: data-warehouse-snowflake-secrets
                mountPath: /fastbi/secrets/snowflake
{%- if cloud_provider == "self-managed" %}
              - name: fastbi-certs
                mountPath: /etc/fastbi/ssl/certs
{%- endif %}
          - name: redis
            image: redis:7.2-bookworm
            ports:
            - containerPort: 6379
            env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: fastbi-user-console-root-secrets
                  key: REDIS_PASSWORD
            command: ["redis-server"]
            args: ["--requirepass", "$(REDIS_PASSWORD)"]
            readinessProbe:
              tcpSocket:
                port: 6379
              initialDelaySeconds: 5
              periodSeconds: 10
            startupProbe:
              tcpSocket:
                port: 6379
              failureThreshold: 30
              periodSeconds: 10
          - name: fastbi-user-console-flask
            image: "{{ tsb_fastbi_web_core_image }}:{{ tsb_fastbi_web_core_image_version }}"
            imagePullPolicy: IfNotPresent
            # command: ["/bin/bash", "-c"]
            # args:
            #   - |
            #     sleep infinity
            ports:
              - name: tcp
                containerPort: 8080
                protocol: TCP
            readinessProbe:
              httpGet:
                path: /health
                port: 8080
              initialDelaySeconds: 30
              periodSeconds: 10
            resources:
              requests:
                memory: "512Mi"
                cpu: "300m"
            env:
              - name: FAST_BI_STATISTICS_ID
                value: "{{ fast_bi_statistics_id }}"
              - name: GUNICORN_CMD_ARGS
                value: "--log-level info --log-syslog"
              - name: FLASK_ENV
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: FLASK_ENV
              - name: DEBUG
                value: "False"
              - name: FLASK_DEBUG
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: FLASK_DEBUG
              - name: FN_FLASK_SECRET_KEY
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-root-secrets
                    key: FN_FLASK_SECRET_KEY
              - name: MAIL_SERVER
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-root-secrets
                    key: MAIL_SERVER
              - name: MAIL_PORT
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-root-secrets
                    key: MAIL_PORT
              - name: MAIL_USE_TLS
                value: "True"
              - name: MAIL_USE_SSL
                value: "False"
              - name: MAIL_USERNAME
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-root-secrets
                    key: MAIL_USERNAME
              - name: MAIL_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-root-secrets
                    key: MAIL_PASSWORD
              - name: MAIL_DEFAULT_SENDER
                value: "{{ mail_default_sender }}"
              - name: DB_HOST
                value: "{{ user_console_db_host }}"
              - name: DB_PORT
                value: "{{ user_console_db_port }}"
              - name: DB_NAME
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-root-secrets
                    key: DB_NAME
              - name: DB_USER
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-root-secrets
                    key: DB_USER
              - name: DB_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-root-secrets
                    key: DB_PASSWORD
              - name: REDIS_HOST
                value: "localhost"
              - name: REDIS_PORT
                value: "6379"
              - name: REDIS_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-root-secrets
                    key: REDIS_PASSWORD
              - name: REDIS_DB
                value: "0"
              - name: DC_DQ_ENDPOINT_URL
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: DC_DQ_ENDPOINT_URL
              - name: DC_DQ_BEARER_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-root-secrets
                    key: DC_DQ_BEARER_TOKEN
              - name: IDP_SSO_CONTROL_MODE
                value: "disabled"
              - name: AIRBYTE_API_LINK
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: AIRBYTE_API_LINK
              - name: WIKI_LINK
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: WIKI_LINK
              - name: IDP_SSO_LINK
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: IDP_SSO_LINK
              - name: IDP_SSO_USERS_LINK
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: IDP_SSO_USERS_LINK
              - name: AIRBYTE_LINK
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: AIRBYTE_LINK
              - name: CUSTOMER_REPO_LINK
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: CUSTOMER_REPO_LINK
              - name: DBT_INIT_API_LINK
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: DBT_INIT_API_LINK
              - name: DBT_INIT_API_KEY
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-root-secrets
                    key: API_KEY
              - name: AIRFLOW_LINK
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: AIRFLOW_LINK
              - name: DATAHUB_LINK
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: DATAHUB_LINK
              - name: GITLAB_LINK
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: GITLAB_LINK
              - name: BI_LINK
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: BI_LINK
              - name: DATA_QUALITY_LINK
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: DATA_QUALITY_LINK
              - name: DATA_CATALOG_LINK
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: DATA_CATALOG_LINK
              - name: MONITORING_LINK
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: MONITORING_LINK
              - name: BI_PLATFORM_GCP_ID
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: BI_PLATFORM_GCP_ID
                    optional: true
              - name: BI_PLATFORM_BQ_ID
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: BI_PLATFORM_BQ_ID
                    optional: true
              - name: IDE_LINK
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: IDE_LINK
              - name: MAIN_LINK
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: MAIN_LINK
              - name: S3_LINK
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: S3_LINK
              - name: MONITORING_BASIC_AUTH_USER
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-root-secrets
                    key: MONITORING_BASIC_AUTH_USER
              - name: MONITORING_BASIC_AUTH_PASS
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-root-secrets
                    key: MONITORING_BASIC_AUTH_PASS
              - name: GCP_SA_SECRET
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-root-secrets
                    key: GCP_SA_SECRET
                    optional: true
              - name: GCP_SA_IMPERSONATE_EMAIL
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: GCP_SA_IMPERSONATE_EMAIL
                    optional: true
              - name: BQ_REGION
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-root-secrets
                    key: BQ_REGION
                    optional: true
              - name: BQ_PROJECT_ID
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-root-secrets
                    key: BQ_PROJECT_ID
                    optional: true
              - name: CUSTOMER
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: CUSTOMER
                    optional: true
              - name: FASTBI_PLATFORM_DWH
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: FASTBI_PLATFORM_DWH
                    optional: true
              - name: ENABLE_BASH_OPERATOR_TAB
                value: "True"
              - name: ENABLE_GKE_OPERATOR_TAB
                value: "False"
              - name: ENABLE_API_OPERATOR_TAB
                value: "True"
              - name: CICD_WORKFLOW_LINK
                valueFrom:
                  secretKeyRef:
                    name: fastbi-user-console-local-secrets
                    key: CICD_WORKFLOW_LINK
{%- if cloud_provider == "self-managed" %}
              - name: SSL_CERT_FILE
                value: /etc/fastbi/ssl/certs/ca.crt
              - name: REQUESTS_CA_BUNDLE  
                value: /etc/fastbi/ssl/certs/ca.crt
{%- endif %}
            volumeMounts:
              - name: fastbi-user-console-flask-data
                mountPath: /usr/src/app/instance/
              - name: fastbi-user-console-sso-cm
                mountPath: /usr/src/app/client_secrets.json
                subPath: client_secrets.json
              - name: data-warehouse-bigquery-secrets
                mountPath: /fastbi/secrets/bigquery
              - name: data-warehouse-fabric-secrets
                mountPath: /fastbi/secrets/fabric
              - name: data-warehouse-redshift-secrets
                mountPath: /fastbi/secrets/redshift
              - name: data-warehouse-snowflake-secrets
                mountPath: /fastbi/secrets/snowflake
              # - name: fastbi-user-console-supervisord-cm
              #   mountPath: /etc/supervisor/supervisord.conf
              #   subPath: supervisord.conf
{%- if cloud_provider == "self-managed" %}
              - name: fastbi-certs
                mountPath: /etc/fastbi/ssl/certs
{%- endif %}
          - name: fastbi-user-console-nginx-proxy
            image: nginx:stable-bullseye
            imagePullPolicy: IfNotPresent
            ports:
              - name: http
                containerPort: 80
                protocol: TCP
            resources:
              requests:
                memory: "512Mi"
                cpu: "300m"
              limits:
                memory: "512Mi"
                cpu: "300m"
            volumeMounts:
              - mountPath: /etc/nginx/conf.d/default.conf
                subPath: default.conf
                name: fastbi-user-console-nginx-proxy-cm
        volumes:
          - name: data-warehouse-bigquery-secrets
            secret:
              secretName: data-warehouse-bigquery-secrets
          - name: data-warehouse-fabric-secrets
            secret:
              secretName: data-warehouse-fabric-secrets
          - name: data-warehouse-redshift-secrets
            secret:
              secretName: data-warehouse-redshift-secrets
          - name: data-warehouse-snowflake-secrets
            secret:
              secretName: data-warehouse-snowflake-secrets
          - name: config
            configMap:
              name: fastbi-user-console-grafana
          - name: dashboards-bi-platform
            configMap:
              name: fastbi-user-console-grafana-dashboards-bi-platform
          - name: storage
            emptyDir: {}
          - name: fastbi-user-console-nginx-proxy-cm
            configMap:
              name: fastbi-user-console-nginx-proxy-cm
          - name: fastbi-user-console-sso-cm
            secret:
              secretName: fastbi-user-console-sso-secrets
          - name: fastbi-user-console-api-openapi-cm
            configMap:
              name: fastbi-user-console-api-openapi-cm
          - name: fastbi-user-console-supervisord-cm
            configMap:
              name: fastbi-user-console-supervisord-cm
{%- if cloud_provider == "self-managed" %}
          - name: system-certs
            hostPath:
              path: /etc/ssl/certs
          - name: ca-certs
            csi:
              driver: csi.cert-manager.io
              readOnly: true
              volumeAttributes:
                # This enables the trust functionality
                csi.cert-manager.io/issuer-name: {{ customer }}-ca-issuer
                csi.cert-manager.io/issuer-kind: ClusterIssuer
                csi.cert-manager.io/mount-as: trusted-ca
          - name: fastbi-certs
            emptyDir: {}
{%- endif %}
    volumeClaimTemplates:
      - metadata:
          name: fastbi-user-console-flask-data
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 1Gi
# Grafana embedings configuration
# Source: grafana/templates/configmap.yaml
{%- raw %}
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: fastbi-user-console-grafana
    labels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: monitoring
  data:
    grafana.ini: |
      [auth.jwt]
      enabled = true
      header_name = X-JWT-Assertion
      username_claim = sub
      email_claim = sub
      auto_sign_up = true
      url_login = true
      key_file = /usr/src/app/instance/grafana.key.pub
      [auth.basic]
      enabled = false
      [auth]
      disable_login_form = true
      disable_signout_menu = true
      [auth.security]
      protected_roles = server_admins org_admins
      [analytics]
      check_for_updates = false
      [log]
      mode = console
      [paths]
      data = /var/lib/grafana/
      logs = /var/log/grafana
      provisioning = /etc/grafana/provisioning
      [security]
      allow_embedding = true
      cookie_samesite = none
      [server]
      domain = localhost
      root_url = %(protocol)s://%(domain)s:%(http_port)s/grafana/
      serve_from_sub_path = true
{%- endraw %}
    datasources.yaml: |
      apiVersion: 1
      datasources:
      - jsonData:
          connMaxLifetime: 14400
          database: '{{ data_replication_db_database }}'
          maxIdleConns: 100
          maxIdleConnsAuto: true
          maxOpenConns: 100
          postgresVersion: 1500
          sslmode: disable
          timescaledb: false
        name: Postgres-AB
        secureJsonData:
          password: '{{ data_replication_db_password }}'
        type: postgres
        url: {{ data_replication_db_host }}:{{ data_replication_db_port }}
        user: '{{ data_replication_db_username }}'
      - jsonData:
          connMaxLifetime: 14400
          database: '{{ data_orchestration_db_database }}'
          maxIdleConns: 100
          maxIdleConnsAuto: true
          maxOpenConns: 100
          postgresVersion: 1500
          sslmode: disable
          timescaledb: false
        name: Postgres-AF
        secureJsonData:
          password: '{{ data_orchestration_db_password }}'
        type: postgres
        url: {{ data_orchestration_db_host }}:{{ data_orchestration_db_port }}
        user: '{{ data_orchestration_db_username }}'
    dashboardproviders.yaml: |
      apiVersion: 1
      providers:
      - disableDeletion: false
        editable: false
        folder: Bi-Platform Services Info
        name: bi-platform
        options:
          path: /var/lib/grafana/dashboards/bi-platform
        orgId: 1
        type: file
{%- raw %}
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: fastbi-user-console-grafana-dashboards-bi-platform
    labels:
      grafana_dashboard: "1"
  data:
    bi-platform-statistics.json: |
      {
        "annotations": {
          "list": [
            {
              "builtIn": 1,
              "datasource": {
                "type": "grafana",
                "uid": "-- Grafana --"
              },
              "enable": true,
              "hide": true,
              "iconColor": "rgba(0, 211, 255, 1)",
              "name": "Annotations & Alerts",
              "type": "dashboard"
            }
          ]
        },
        "editable": true,
        "fiscalYearStartMonth": 0,
        "graphTooltip": 0,
        "id": 34,
        "links": [],
        "liveNow": false,
        "panels": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "P96EA1BDB221D2E18"
            },
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "mappings": [],
                "thresholds": {
                  "mode": "percentage",
                  "steps": [
                    {
                      "color": "super-light-red",
                      "value": null
                    },
                    {
                      "color": "super-light-orange",
                      "value": 20
                    },
                    {
                      "color": "super-light-yellow",
                      "value": 40
                    },
                    {
                      "color": "super-light-blue",
                      "value": 60
                    },
                    {
                      "color": "super-light-green",
                      "value": 80
                    },
                    {
                      "color": "light-green",
                      "value": 100
                    }
                  ]
                },
                "unit": "percent",
                "unitScale": true
              },
              "overrides": []
            },
            "gridPos": {
              "h": 8,
              "w": 5,
              "x": 0,
              "y": 0
            },
            "id": 1,
            "options": {
              "minVizHeight": 75,
              "minVizWidth": 75,
              "orientation": "auto",
              "reduceOptions": {
                "calcs": [
                  "lastNotNull"
                ],
                "fields": "",
                "values": false
              },
              "showThresholdLabels": true,
              "showThresholdMarkers": true,
              "sizing": "auto",
              "text": {}
            },
            "pluginVersion": "10.3.3",
            "targets": [
              {
                "datasource": {
                  "type": "postgres",
                  "uid": "P96EA1BDB221D2E18"
                },
                "format": "table",
                "group": [
                  {
                    "params": [
                      "720h",
                      "none"
                    ],
                    "type": "time"
                  },
                  {
                    "params": [
                      "source2destination_name"
                    ],
                    "type": "column"
                  }
                ],
                "metricColumn": "none",
                "rawQuery": false,
                "rawSql": "SELECT\n  avg(success_rate) AS \"Success Rate\"\nFROM public_mart.mart_sync_success_day\nWHERE\n  $__timeFilter(sync_updated)",
                "refId": "A",
                "select": [
                  [
                    {
                      "params": [
                        "success_rate"
                      ],
                      "type": "column"
                    },
                    {
                      "params": [
                        "avg"
                      ],
                      "type": "aggregate"
                    },
                    {
                      "params": [
                        "Success Rate"
                      ],
                      "type": "alias"
                    }
                  ]
                ],
                "table": "public_mart.mart_sync_success_day",
                "timeColumn": "sync_updated",
                "timeColumnType": "date",
                "where": [
                  {
                    "name": "$__timeFilter",
                    "params": [],
                    "type": "macro"
                  }
                ]
              }
            ],
            "title": "Success Rate per Schedule",
            "type": "gauge"
          },
          {
            "datasource": {
              "type": "grafana-postgresql-datasource",
              "uid": "P96EA1BDB221D2E18"
            },
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "custom": {
                  "axisBorderShow": false,
                  "axisCenteredZero": false,
                  "axisColorMode": "text",
                  "axisLabel": "",
                  "axisPlacement": "auto",
                  "barAlignment": 0,
                  "drawStyle": "line",
                  "fillOpacity": 0,
                  "gradientMode": "none",
                  "hideFrom": {
                    "legend": false,
                    "tooltip": false,
                    "viz": false
                  },
                  "insertNulls": false,
                  "lineInterpolation": "linear",
                  "lineStyle": {
                    "fill": "solid"
                  },
                  "lineWidth": 3,
                  "pointSize": 8,
                  "scaleDistribution": {
                    "type": "linear"
                  },
                  "showPoints": "auto",
                  "spanNulls": true,
                  "stacking": {
                    "group": "A",
                    "mode": "none"
                  },
                  "thresholdsStyle": {
                    "mode": "dashed"
                  }
                },
                "mappings": [],
                "thresholds": {
                  "mode": "percentage",
                  "steps": [
                    {
                      "color": "super-light-green",
                      "value": null
                    },
                    {
                      "color": "super-light-purple",
                      "value": 10
                    },
                    {
                      "color": "light-purple",
                      "value": 20
                    },
                    {
                      "color": "super-light-blue",
                      "value": 30
                    },
                    {
                      "color": "light-blue",
                      "value": 40
                    },
                    {
                      "color": "super-light-yellow",
                      "value": 50
                    },
                    {
                      "color": "light-yellow",
                      "value": 60
                    },
                    {
                      "color": "super-light-orange",
                      "value": 70
                    },
                    {
                      "color": "light-orange",
                      "value": 80
                    },
                    {
                      "color": "super-light-red",
                      "value": 90
                    },
                    {
                      "color": "light-red",
                      "value": 100
                    }
                  ]
                },
                "unit": "s",
                "unitScale": true
              },
              "overrides": []
            },
            "gridPos": {
              "h": 8,
              "w": 9,
              "x": 5,
              "y": 0
            },
            "id": 2,
            "options": {
              "legend": {
                "calcs": [
                  "lastNotNull"
                ],
                "displayMode": "table",
                "placement": "right",
                "showLegend": true
              },
              "tooltip": {
                "mode": "single",
                "sort": "none"
              }
            },
            "targets": [
              {
                "datasource": {
                  "type": "postgres",
                  "uid": "P96EA1BDB221D2E18"
                },
                "editorMode": "code",
                "format": "time_series",
                "group": [
                  {
                    "params": [
                      "$__interval",
                      "none"
                    ],
                    "type": "time"
                  }
                ],
                "metricColumn": "source2destination_name",
                "rawQuery": true,
                "rawSql": "SELECT\n  $__timeGroupAlias(sync_updated,$__interval),\n  source2destination_name AS metric,\n  sum(sum_attempt_duration) AS \"Run Time\"\nFROM public_mart.mart_sync_success_day\nWHERE\n  $__timeFilter(sync_updated)\nGROUP BY 1,2\nORDER BY 1,2",
                "refId": "A",
                "select": [
                  [
                    {
                      "params": [
                        "sum_attempt_duration"
                      ],
                      "type": "column"
                    },
                    {
                      "params": [
                        "sum"
                      ],
                      "type": "aggregate"
                    },
                    {
                      "params": [
                        "Run Time"
                      ],
                      "type": "alias"
                    }
                  ]
                ],
                "sql": {
                  "columns": [
                    {
                      "parameters": [],
                      "type": "function"
                    }
                  ],
                  "groupBy": [
                    {
                      "property": {
                        "type": "string"
                      },
                      "type": "groupBy"
                    }
                  ],
                  "limit": 50
                },
                "table": "public_mart.mart_sync_success_day",
                "timeColumn": "sync_updated",
                "timeColumnType": "date",
                "where": [
                  {
                    "name": "$__timeFilter",
                    "params": [],
                    "type": "macro"
                  }
                ]
              }
            ],
            "title": "Replication Run Time",
            "type": "timeseries"
          },
          {
            "datasource": {
              "type": "postgres",
              "uid": "P96EA1BDB221D2E18"
            },
            "fieldConfig": {
              "defaults": {
                "color": {
                  "fixedColor": "#24292e85",
                  "mode": "thresholds"
                },
                "custom": {
                  "axisBorderShow": false,
                  "axisCenteredZero": false,
                  "axisColorMode": "text",
                  "axisLabel": "",
                  "axisPlacement": "auto",
                  "barAlignment": 0,
                  "drawStyle": "line",
                  "fillOpacity": 0,
                  "gradientMode": "none",
                  "hideFrom": {
                    "legend": false,
                    "tooltip": false,
                    "viz": false
                  },
                  "insertNulls": false,
                  "lineInterpolation": "smooth",
                  "lineStyle": {
                    "fill": "solid"
                  },
                  "lineWidth": 3,
                  "pointSize": 8,
                  "scaleDistribution": {
                    "type": "linear"
                  },
                  "showPoints": "always",
                  "spanNulls": true,
                  "stacking": {
                    "group": "A",
                    "mode": "none"
                  },
                  "thresholdsStyle": {
                    "mode": "dashed"
                  }
                },
                "fieldMinMax": false,
                "mappings": [],
                "thresholds": {
                  "mode": "percentage",
                  "steps": [
                    {
                      "color": "super-light-green",
                      "value": null
                    },
                    {
                      "color": "super-light-purple",
                      "value": 10
                    },
                    {
                      "color": "light-purple",
                      "value": 20
                    },
                    {
                      "color": "super-light-blue",
                      "value": 30
                    },
                    {
                      "color": "light-blue",
                      "value": 40
                    },
                    {
                      "color": "super-light-yellow",
                      "value": 50
                    },
                    {
                      "color": "light-yellow",
                      "value": 60
                    },
                    {
                      "color": "super-light-orange",
                      "value": 70
                    },
                    {
                      "color": "light-orange",
                      "value": 80
                    },
                    {
                      "color": "super-light-red",
                      "value": 90
                    },
                    {
                      "color": "light-red",
                      "value": 100
                    }
                  ]
                },
                "unit": "mbytes",
                "unitScale": true
              },
              "overrides": []
            },
            "gridPos": {
              "h": 8,
              "w": 10,
              "x": 14,
              "y": 0
            },
            "id": 3,
            "options": {
              "legend": {
                "calcs": [
                  "lastNotNull"
                ],
                "displayMode": "table",
                "placement": "right",
                "showLegend": true
              },
              "tooltip": {
                "mode": "single",
                "sort": "none"
              }
            },
            "targets": [
              {
                "datasource": {
                  "type": "postgres",
                  "uid": "P96EA1BDB221D2E18"
                },
                "format": "time_series",
                "group": [],
                "metricColumn": "source2destination_name",
                "rawQuery": false,
                "rawSql": "SELECT\n  sync_updated AS \"time\",\n  source2destination_name AS metric,\n  sum_volume_mb AS \"Replicated Amount MB\"\nFROM public_mart.mart_sync_success_day\nWHERE\n  $__timeFilter(sync_updated)\nORDER BY 1,2",
                "refId": "A",
                "select": [
                  [
                    {
                      "params": [
                        "sum_volume_mb"
                      ],
                      "type": "column"
                    },
                    {
                      "params": [
                        "Replicated Amount MB"
                      ],
                      "type": "alias"
                    }
                  ]
                ],
                "table": "public_mart.mart_sync_success_day",
                "timeColumn": "sync_updated",
                "timeColumnType": "date",
                "where": [
                  {
                    "name": "$__timeFilter",
                    "params": [],
                    "type": "macro"
                  }
                ]
              }
            ],
            "title": "Replicated Data amount",
            "type": "timeseries"
          },
          {
            "datasource": {
              "type": "grafana-postgresql-datasource",
              "uid": "PF85F16481827C812"
            },
            "description": "",
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "custom": {
                  "align": "auto",
                  "cellOptions": {
                    "type": "auto"
                  },
                  "filterable": false,
                  "inspect": false
                },
                "decimals": 0,
                "displayName": "",
                "fieldMinMax": false,
                "mappings": [],
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "super-light-green",
                      "value": null
                    },
                    {
                      "color": "super-light-red",
                      "value": 80
                    }
                  ]
                },
                "unit": "none",
                "unitScale": false
              },
              "overrides": [
                {
                  "matcher": {
                    "id": "byName",
                    "options": "start_date"
                  },
                  "properties": [
                    {
                      "id": "displayName",
                      "value": "Start Date"
                    },
                    {
                      "id": "unit",
                      "value": "time: YYYY-MM-DD HH:mm:ss"
                    },
                    {
                      "id": "custom.align"
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "avg_dag_durration"
                  },
                  "properties": [
                    {
                      "id": "displayName",
                      "value": "Avg Dag Duration"
                    },
                    {
                      "id": "unit",
                      "value": "s"
                    },
                    {
                      "id": "decimals",
                      "value": 2
                    },
                    {
                      "id": "custom.cellOptions",
                      "value": {
                        "type": "color-background"
                      }
                    },
                    {
                      "id": "custom.align"
                    },
                    {
                      "id": "thresholds",
                      "value": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "#d5d8e1",
                            "value": null
                          },
                          {
                            "color": "#8ab9ff8f",
                            "value": 600
                          },
                          {
                            "color": "#5795f2c7",
                            "value": 900
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "completion_percentage"
                  },
                  "properties": [
                    {
                      "id": "displayName",
                      "value": "Conclusion"
                    },
                    {
                      "id": "unit",
                      "value": "none"
                    },
                    {
                      "id": "decimals",
                      "value": 2
                    },
                    {
                      "id": "custom.cellOptions",
                      "value": {
                        "type": "color-background"
                      }
                    },
                    {
                      "id": "custom.align",
                      "value": "center"
                    },
                    {
                      "id": "thresholds",
                      "value": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "#5795f2c7",
                            "value": null
                          },
                          {
                            "color": "#d5d8e1",
                            "value": 1
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "start_date"
                  },
                  "properties": [
                    {
                      "id": "displayName",
                      "value": "Data"
                    },
                    {
                      "id": "unit",
                      "value": "short"
                    },
                    {
                      "id": "decimals",
                      "value": 2
                    },
                    {
                      "id": "unit",
                      "value": "time: YYYY-MM-DD"
                    },
                    {
                      "id": "custom.align",
                      "value": "left"
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "dag_id"
                  },
                  "properties": [
                    {
                      "id": "displayName",
                      "value": "Dag Name"
                    },
                    {
                      "id": "unit",
                      "value": "short"
                    },
                    {
                      "id": "decimals",
                      "value": 2
                    },
                    {
                      "id": "custom.align",
                      "value": "center"
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "state"
                  },
                  "properties": [
                    {
                      "id": "displayName",
                      "value": "Dag_Status"
                    },
                    {
                      "id": "unit",
                      "value": "short"
                    },
                    {
                      "id": "custom.align",
                      "value": "center"
                    },
                    {
                      "id": "mappings",
                      "value": [
                        {
                          "options": {
                            "failed": {
                              "color": "#d5d8e1",
                              "index": 1,
                              "text": "Failed"
                            },
                            "success": {
                              "color": "light-blue",
                              "index": 0,
                              "text": "Success"
                            }
                          },
                          "type": "value"
                        }
                      ]
                    },
                    {
                      "id": "custom.cellOptions",
                      "value": {
                        "type": "color-background"
                      }
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "completion_percentage_num"
                  },
                  "properties": [
                    {
                      "id": "displayName",
                      "value": "Completion Percentage"
                    },
                    {
                      "id": "unit",
                      "value": "percentunit"
                    },
                    {
                      "id": "custom.align",
                      "value": "center"
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "total_tasks"
                  },
                  "properties": [
                    {
                      "id": "displayName",
                      "value": "Total_Jobs"
                    },
                    {
                      "id": "unit",
                      "value": "none"
                    },
                    {
                      "id": "custom.align",
                      "value": "center"
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "running"
                  },
                  "properties": [
                    {
                      "id": "displayName",
                      "value": "Jobs_Running"
                    },
                    {
                      "id": "unit",
                      "value": "none"
                    },
                    {
                      "id": "custom.align",
                      "value": "center"
                    },
                    {
                      "id": "thresholds",
                      "value": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "#5795f2c7",
                            "value": null
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "success"
                  },
                  "properties": [
                    {
                      "id": "displayName",
                      "value": "Job_Succeeded"
                    },
                    {
                      "id": "unit",
                      "value": "none"
                    },
                    {
                      "id": "custom.cellOptions",
                      "value": {
                        "type": "color-background"
                      }
                    },
                    {
                      "id": "custom.align",
                      "value": "center"
                    },
                    {
                      "id": "thresholds",
                      "value": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "#d5d8e1",
                            "value": null
                          },
                          {
                            "color": "#8ab9ff8f",
                            "value": 150
                          },
                          {
                            "color": "#5795f2c7",
                            "value": 200
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "failed"
                  },
                  "properties": [
                    {
                      "id": "displayName",
                      "value": "Jobs_Failed"
                    },
                    {
                      "id": "unit",
                      "value": "short"
                    },
                    {
                      "id": "links",
                      "value": [
                        {
                          "targetBlank": false,
                          "title": "",
                          "url": ""
                        }
                      ]
                    },
                    {
                      "id": "custom.cellOptions",
                      "value": {
                        "type": "color-background"
                      }
                    },
                    {
                      "id": "custom.align",
                      "value": "center"
                    },
                    {
                      "id": "thresholds",
                      "value": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "#d5d8e1",
                            "value": null
                          },
                          {
                            "color": "#5795f2c7",
                            "value": 1
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "other_status"
                  },
                  "properties": [
                    {
                      "id": "displayName",
                      "value": "Other_Status"
                    },
                    {
                      "id": "unit",
                      "value": "short"
                    },
                    {
                      "id": "custom.cellOptions",
                      "value": {
                        "type": "color-background"
                      }
                    },
                    {
                      "id": "custom.align",
                      "value": "center"
                    },
                    {
                      "id": "thresholds",
                      "value": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "#d5d8e1",
                            "value": null
                          },
                          {
                            "color": "#8ab9ff8f",
                            "value": 2
                          },
                          {
                            "color": "#5795f2c7",
                            "value": 10
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "waring"
                  },
                  "properties": [
                    {
                      "id": "displayName",
                      "value": "Warning"
                    },
                    {
                      "id": "unit",
                      "value": "short"
                    },
                    {
                      "id": "custom.align"
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "critical"
                  },
                  "properties": [
                    {
                      "id": "displayName",
                      "value": "Critical"
                    },
                    {
                      "id": "unit",
                      "value": "short"
                    },
                    {
                      "id": "custom.align"
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "job"
                  },
                  "properties": [
                    {
                      "id": "unit",
                      "value": "short"
                    },
                    {
                      "id": "custom.align"
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "failed2"
                  },
                  "properties": [
                    {
                      "id": "displayName",
                      "value": "Status"
                    },
                    {
                      "id": "unit",
                      "value": "short"
                    },
                    {
                      "id": "decimals",
                      "value": 2
                    },
                    {
                      "id": "custom.cellOptions",
                      "value": {
                        "type": "color-background"
                      }
                    },
                    {
                      "id": "custom.align",
                      "value": "center"
                    },
                    {
                      "id": "thresholds",
                      "value": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "#5795f2c7",
                            "value": null
                          },
                          {
                            "color": "#d5d8e1",
                            "value": 0
                          },
                          {
                            "color": "#5795f2c7",
                            "value": 1
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "speedj"
                  },
                  "properties": [
                    {
                      "id": "displayName",
                      "value": "Speed_Trend"
                    },
                    {
                      "id": "unit",
                      "value": "s"
                    },
                    {
                      "id": "decimals",
                      "value": 2
                    },
                    {
                      "id": "custom.align"
                    }
                  ]
                }
              ]
            },
            "gridPos": {
              "h": 12,
              "w": 24,
              "x": 0,
              "y": 8
            },
            "id": 4,
            "links": [],
            "options": {
              "cellHeight": "sm",
              "footer": {
                "countRows": false,
                "fields": "",
                "reducer": [
                  "sum"
                ],
                "show": false
              },
              "showHeader": true
            },
            "pluginVersion": "10.3.3",
            "targets": [
              {
                "datasource": {
                  "type": "postgres",
                  "uid": "PF85F16481827C812"
                },
                "editorMode": "code",
                "format": "table",
                "group": [],
                "hide": false,
                "metricColumn": "none",
                "rawQuery": true,
                "rawSql": "with \r\ndags_processar as (\r\n\tselect dp.*, dr.execution_date, dr.run_id, dr.id, dr.state \r\n\tfrom public.dag dp \r\n\tinner join dag_run dr on dp.dag_id = dr.dag_id\r\n\twhere is_active is true\r\n),\r\ntask_avg as (\r\n\t-- average duration per task\r\n\tselect ti.dag_id, ti.task_id, round(avg(ti.duration)) avg_duration_seconds, \r\n\tcount(1) total_execution_times \r\n\tfrom dags_processar dp \r\n\tinner join task_instance  ti on ti.dag_id  = dp.dag_id and dp.run_id=ti.run_id\r\n\twhere dp.execution_date   >= dp.execution_date -  interval '60 day'\r\n\tand   ti.state  = 'success'\r\n\tgroup by ti.dag_id, ti.task_id\r\n\torder by 1, 2),\r\ntmp as(\r\n\tselect dr.*, rank() over (partition by dr.dag_id  order by dr.id desc) as rk \r\n\tfrom dags_processar dr),\r\ndags_last_execution as (\r\n\tselect * from tmp where rk = 1),\r\nlast_execution_tasks as (\t\r\n--- last run tasks\r\n\tselect ti.dag_id \r\n\t\t  ,ti.task_id \r\n\t\t  ,ti.state \r\n\t\t  ,ti.start_date \r\n\t\t  ,round(EXTRACT(EPOCH FROM (coalesce(ti.end_date, current_timestamp) - ti.start_date ))) as last_duration \r\n\tfrom dags_last_execution dle \r\n\tinner join task_instance ti \r\n\ton dle.dag_id = ti.dag_id  and dle.run_id=ti.run_id\r\n\t),\r\n\t\r\ntemp_last_execution_rules as (\r\n\tselect let.dag_id, let.task_id, let.state,\r\n\t\tcase when  let.last_duration> 900 and let.last_duration >= ta.avg_duration_seconds*1.3 \r\n\t\t\t\t\t\t\t\t\t\t  and total_execution_times > 10 then 'CRITICAL'\r\n             when  let.last_duration> 180 and let.last_duration >= ta.avg_duration_seconds*1.3 \r\n\t\t\t\t\t\t\t\t\t\t  and total_execution_times > 10 then 'WARNING'\r\n\t\t     else 'OK'\r\n\t\tend message,\r\n\t\tlet.last_duration,\r\n\t\tta.avg_duration_seconds,\r\n\t\ttotal_execution_times,\r\n\t\tcase when  let.state = 'success' then ta.avg_duration_seconds- let.last_duration  \r\n\t\t\telse 0 end dif_between_avg_and_last\r\n\tfrom last_execution_tasks let \r\n\tleft join task_avg ta on let.dag_id = ta.dag_id and let.task_id = ta.task_id)\r\n\t\r\n-- last run status of tasks\r\nselect \r\n    ti.dag_id, \r\n    dle.execution_date + interval '1 day' as start_date, \r\n    dle.state,\r\n\t\tsum(avg_duration_seconds) FILTER (WHERE ti.state = 'success') as avg_dag_durration,\r\n    case \r\n        when sum(avg_duration_seconds) FILTER (WHERE ti.state = 'success') / nullif(sum(avg_duration_seconds) FILTER (WHERE avg_duration_seconds <> 0 and avg_duration_seconds is not null), 0) <> 0 then \r\n            sum(avg_duration_seconds) FILTER (WHERE ti.state = 'success') / nullif(sum(avg_duration_seconds) FILTER (WHERE avg_duration_seconds <> 0 and avg_duration_seconds is not null), 0)\r\n        else \r\n            0 \r\n    end as completion_percentage,\r\n    case \r\n        when sum(avg_duration_seconds) FILTER (WHERE ti.state = 'success') / nullif(sum(avg_duration_seconds) FILTER (WHERE avg_duration_seconds <> 0 and avg_duration_seconds is not null), 0) <> 0 then \r\n            sum(avg_duration_seconds) FILTER (WHERE ti.state = 'success') / nullif(sum(avg_duration_seconds) FILTER (WHERE avg_duration_seconds <> 0 and avg_duration_seconds is not null), 0)\r\n        else \r\n            0\r\n    end as completion_percentage_num,\r\n    count(1) as total_tasks,\r\n    count(1) FILTER (WHERE ti.state = 'running') as running,\r\n    count(1) FILTER (WHERE ti.state = 'success') as success,\r\n    count(1) FILTER (WHERE ti.state = 'failed') as failed,\r\n    count(1) FILTER (WHERE ti.state = 'failed') as failed2,\r\n    count(1) FILTER (WHERE ti.state not in ('failed', 'success' )) as other_status,\r\n    count(1) filter (where ti.message = 'WARNING') as warning,\r\n    count(1) filter (where ti.message = 'CRITICAL') as critical,\r\n    cast(avg(dif_between_avg_and_last) FILTER (WHERE ti.state = 'success') as Integer) as speedj \r\nfrom \r\n    dags_last_execution dle \r\ninner join \r\n    temp_last_execution_rules ti on dle.dag_id = ti.dag_id\t\t\r\ngroup by \r\n    ti.dag_id, dle.execution_date, dle.state;",
                "refId": "A",
                "select": [
                  [
                    {
                      "params": [
                        "duration"
                      ],
                      "type": "column"
                    }
                  ]
                ],
                "sql": {
                  "columns": [
                    {
                      "parameters": [],
                      "type": "function"
                    }
                  ],
                  "groupBy": [
                    {
                      "property": {
                        "type": "string"
                      },
                      "type": "groupBy"
                    }
                  ],
                  "limit": 50
                },
                "table": "task_instance",
                "timeColumn": "execution_date",
                "timeColumnType": "timestamp",
                "where": [
                  {
                    "name": "$__timeFilter",
                    "params": [],
                    "type": "macro"
                  }
                ]
              }
            ],
            "title": "DAG Status",
            "transformations": [
              {
                "id": "merge",
                "options": {
                  "reducers": []
                }
              }
            ],
            "type": "table"
          }
        ],
        "refresh": "",
        "schemaVersion": 39,
        "tags": [],
        "templating": {
          "list": []
        },
        "time": {
          "from": "now/M",
          "to": "now"
        },
        "timepicker": {},
        "timezone": "",
        "title": "Public-PlatformStatistics",
        "uid": "b6c151d2-951a-492b-9049-47ea2815dcc3",
        "version": 6,
        "weekStart": ""
      }
{% endraw %}