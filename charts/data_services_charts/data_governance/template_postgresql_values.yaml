## Fast.BI Deployment 
# Helm deployment values for Service.
# Helm Chart name: {{ chart_name }}
# Helm Chart repo: {{ chart_repo }}
# Helm Chart version {{ chart_version }}
fullnameOverride: "data-governance-psql"
image:
  registry: docker.io
  repository: bitnami/postgresql
  tag: 16.2.0
architecture: standalone
replication:
  synchronousCommit: "on"
  applicationName: "data-governance"
primary:
  name: ""
  replicaCount: 1
  resourcesPreset: "none"
  extendedConfiguration: |
    max_connections = 1000
readReplicas:
  replicaCount: 1
  extendedConfiguration: |
    max_connections = 1000
  resourcesPreset: "none"
auth:
  enablePostgresUser: true
  existingSecret: data-governance-postgresql-secrets
  secretKeys:
    adminPasswordKey: postgresPassword
    userPasswordKey: password
    replicationPasswordKey: replicationPassword
  replicationUsername: {{ replication_username }}
  username: {{ username }}
  database: {{ database }}
persistence:
  enabled: true
  accessMode: ReadWriteOnce
  size: 10Gi
podSecurityContext:
  fsGroup: 70
containerSecurityContext:
  allowPrivilegeEscalation: false 
  runAsNonRoot: true
  runAsUser: 70
  runAsGroup: 70
  readOnlyRootFilesystem: false
  capabilities:
    drop: ["ALL"]
  seccompProfile:
    type: RuntimeDefault
commonAnnotations:
  helm.sh/hook: pre-install,pre-upgrade
  helm.sh/hook-weight: "-1"
metrics:
  enabled: true
extraDeploy:
{%- if method == "external_infisical" %}
- apiVersion: secrets.infisical.com/v1alpha1
  kind: InfisicalSecret
  metadata:
      name: infisicalsecret-data-governance-database-secrets
  spec:
      resyncInterval: 15
      authentication:
          universalAuth:
              secretsScope:
                  projectSlug: "{{ project_slug }}"
                  envSlug: prod
                  secretsPath: "/data-governance/database-secrets/"
              credentialsRef:
                  secretName: universal-auth-credentials
                  secretNamespace: infisical-operator-system
      managedSecretReference:
          secretName: data-governance-postgresql-secrets
          secretNamespace: "{{ namespace }}"
{%- endif %}
{%- if method == "local_vault" %}
- apiVersion: external-secrets.io/v1
  kind: ExternalSecret
  metadata:
    name: hashicorp-data-governance-postgresql-secrets
    namespace: "{{ namespace }}"
  spec: 
    refreshInterval: 24h
    secretStoreRef:
      name: vault-backend
      kind: ClusterSecretStore
    target:
      name: data-governance-postgresql-secrets
    dataFrom:
      - extract:
          key: "data-governance/database-secrets"
{%- endif %}