image: alpine:latest

definitions:
  steps:
    - step: &argo_setup
        name: Setup Argo Workflow
        script:
          - set -o errexit -o pipefail -o nounset
          - set +x
          - apk add --no-cache curl kubectl git > /dev/null 2>&1
          - echo "Downloading Argo CLI"
          - curl -sLO https://github.com/argoproj/argo-workflows/releases/download/$ARGO_CLI_VERSION/argo-linux-amd64.gz
          - gunzip argo-linux-amd64.gz > /dev/null 2>&1
          - chmod +x argo-linux-amd64
          - mv ./argo-linux-amd64 /usr/local/bin/argo
          - echo "Setting up Argo Workflow authentication"
          - ARGO_TOKEN="Bearer ${ARGO_WORKFLOW_SA_TOKEN}"
          - export ARGO_TOKEN
          - echo "Cloning workflow repository"
          - git clone -q --depth 1 --branch ${CICD_WORKFLOWS_TEMPLATE_VERSION} https://$CI_ACCESS_TOKEN_NAME:$CI_ACCESS_TOKEN@gitlab.fast.bi/infrastructure/bi-platform-cicd-workflows/fast_bi_argo_workflows.git /tmp/.argo > /dev/null 2>&1 || (echo "Failed to clone tag ${CICD_WORKFLOWS_TEMPLATE_VERSION}, falling back to master" && git clone -q --depth 1 --branch master https://$CI_ACCESS_TOKEN_NAME:$CI_ACCESS_TOKEN@gitlab.fast.bi/infrastructure/bi-platform-cicd-workflows/fast_bi_argo_workflows.git /tmp/.argo > /dev/null 2>&1)
          - cd /tmp/.argo

pipelines:
  branches:
    '**':
      - step: *argo_setup
        name: Validate Data Model Workflow
        script:
          - |
            echo "Submitting Branch Argo Workflow"
            argo submit /tmp/.argo/branch_workflow.yaml \
              -p repo_url="${BITBUCKET_GIT_HTTP_ORIGIN}" \
              -p revision="${BITBUCKET_COMMIT}" \
              -p branch="${BITBUCKET_BRANCH}" \
              -p commit_short_sha="${BITBUCKET_COMMIT:0:7}" \
              -p git_token="${BITBUCKET_APP_PASSWORD}" \
              -p git_username="${BITBUCKET_USERNAME}" \
              -p argo_main_address="${ARGO_SERVER}" \
              -p check_on_branch="false" \
              --labels="project=${BITBUCKET_REPO_SLUG},commit=${BITBUCKET_COMMIT},author=${BITBUCKET_USERNAME},ci_job_id=${BITBUCKET_BUILD_NUMBER},place=branch" \
              --generate-name="branch-${BITBUCKET_REPO_SLUG}-cicd-${BITBUCKET_COMMIT:0:7}-" \
              --watch --log
            # Get workflow host address
            WORKFLOW_NAME=$(argo list --selector "commit=${BITBUCKET_COMMIT},ci_job_id=${BITBUCKET_BUILD_NUMBER},place=branch" -o name | cut -d'/' -f2)
            ARGO_HOST=$(echo $ARGO_SERVER | cut -d':' -f1)
            WORKFLOW_URL="${ARGO_HOST}/workflows/${ARGO_NAMESPACE}/${WORKFLOW_NAME}"
            # Check status and print colored URL
            if [ "$(argo list --status Failed --selector "commit=${BITBUCKET_COMMIT},ci_job_id=${BITBUCKET_BUILD_NUMBER},place=branch" | wc -l)" -gt 1 ]; then
              echo -e "\e[31mArgo Workflow URL: ${WORKFLOW_URL}\e[0m"
              exit 1
            else
              echo -e "\e[32mArgo Workflow URL: ${WORKFLOW_URL}\e[0m"
            fi

  pull-requests:
    '**':
      - step: *argo_setup
        name: Validate Data Model Workflow PR
        script:
          - |
            echo "Submitting Pull Request Argo Workflow"
            argo submit /tmp/.argo/mr_e2e_workflow.yaml \
              -p repo_url="${BITBUCKET_GIT_HTTP_ORIGIN}" \
              -p revision="${BITBUCKET_COMMIT}" \
              -p branch="${BITBUCKET_BRANCH}" \
              -p commit_short_sha="${BITBUCKET_COMMIT:0:7}" \
              -p git_token="${BITBUCKET_APP_PASSWORD}" \
              -p git_username="${BITBUCKET_USERNAME}" \
              -p argo_main_address="${ARGO_SERVER}" \
              -p target_branch="${BITBUCKET_PR_DESTINATION_BRANCH}" \
              -p ci_job_id="${BITBUCKET_BUILD_NUMBER}" \
              --labels="project=${BITBUCKET_REPO_SLUG},commit=${BITBUCKET_COMMIT},author=${BITBUCKET_USERNAME},ci_job_id=${BITBUCKET_BUILD_NUMBER},place=pull_request" \
              --generate-name="pr-${BITBUCKET_REPO_SLUG}-cicd-${BITBUCKET_COMMIT:0:7}-" \
              --watch --log
            # Get workflow host address
            WORKFLOW_NAME=$(argo list --selector "commit=${BITBUCKET_COMMIT},ci_job_id=${BITBUCKET_BUILD_NUMBER},place=pull_request" -o name | cut -d'/' -f2)
            ARGO_HOST=$(echo $ARGO_SERVER | cut -d':' -f1)
            WORKFLOW_URL="${ARGO_HOST}/workflows/${ARGO_NAMESPACE}/${WORKFLOW_NAME}"
            # Check status and print colored URL
            if [ "$(argo list --status Failed --selector "commit=${BITBUCKET_COMMIT},ci_job_id=${BITBUCKET_BUILD_NUMBER},place=pull_request" | wc -l)" -gt 1 ]; then
              echo -e "\e[31mArgo Workflow URL: ${WORKFLOW_URL}\e[0m"
              exit 1
            else
              echo -e "\e[32mArgo Workflow URL: ${WORKFLOW_URL}\e[0m"
            fi

  tags:
    '**':
      - step: *argo_setup
        name: Release Data Model Workflow
        script:
          - |
            echo "Submitting Main Argo Workflow"
            argo submit /tmp/.argo/main_workflow.yaml \
              -p repo_url="${BITBUCKET_GIT_HTTP_ORIGIN}" \
              -p revision="${BITBUCKET_COMMIT}" \
              -p commit_short_sha="${BITBUCKET_COMMIT:0:7}" \
              -p commit_before_sha="${BITBUCKET_COMMIT_BEFORE}" \
              -p git_token="${BITBUCKET_APP_PASSWORD}" \
              -p git_username="${BITBUCKET_USERNAME}" \
              -p argo_main_address="${ARGO_SERVER}" \
              --labels="project=${BITBUCKET_REPO_SLUG},commit=${BITBUCKET_COMMIT},author=${BITBUCKET_USERNAME},ci_job_id=${BITBUCKET_BUILD_NUMBER},place=main" \
              --generate-name="main-${BITBUCKET_REPO_SLUG}-cicd-${BITBUCKET_COMMIT:0:7}-" \
              --watch --log
            # Get workflow host address
            WORKFLOW_NAME=$(argo list --selector "commit=${BITBUCKET_COMMIT},ci_job_id=${BITBUCKET_BUILD_NUMBER},place=main" -o name | cut -d'/' -f2)
            ARGO_HOST=$(echo $ARGO_SERVER | cut -d':' -f1)
            WORKFLOW_URL="${ARGO_HOST}/workflows/${ARGO_NAMESPACE}/${WORKFLOW_NAME}"
            # Check status and print colored URL
            if [ "$(argo list --status Failed --selector "commit=${BITBUCKET_COMMIT},ci_job_id=${BITBUCKET_BUILD_NUMBER},place=main" | wc -l)" -gt 1 ]; then
              echo -e "\e[31mArgo Workflow URL: ${WORKFLOW_URL}\e[0m"
              exit 1
            else
              echo -e "\e[32mArgo Workflow URL: ${WORKFLOW_URL}\e[0m"
            fi 